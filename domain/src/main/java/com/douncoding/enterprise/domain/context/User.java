package com.douncoding.enterprise.domain.context;


import java.util.UUID;

/**
 * 도메인 모델
 * 'Enterprise' Application 을 사용하는 사용자
 *
 * 사용자는 인증된 사용자와 안된 사용자가 있을 수 있다. 인증된 사용자만 특정 서비스를 사용할 수 있다.
 * 인증 안된 사용자는 서비스를 이용하지만 제약이 발생하며, 관리자는 인증 안된 사용자의 '행위'도 추적이
 * 가능해야 한다.
 *
 * 권한과 관련된 부분은 Role(?) 형식을 사용하는게 일반적인 것 처럼 보인다. 책에서도 본것 같고..
 * http://edn.embarcadero.com/article/29678
 * 공부 좀더하고 다시 짠다. User
 *
 * 필수행동도 찾아내야한다. User 가 하는 필수행동은?
 *
 * 식별자는 단순 UUID를 사용한다. 올랜덤.. 의미를 부여하고싶지만..
 * 이것은 나중에.. 복잡해진다. 일단 한번접속하고 나면 내부에 캐싱되어 기록된다 생성된 UUID는..
 * 그러면 미가입사용자도 추적이 가능하다.
 *
 * 필수정보
 * 인증은 어는 위치에서 수행하는것인가? User가 하는건가? 아니면 다른 곳에서?
 *
 * 클라이언트, 파트너스, 관리자, 일반 사용자, 블랙 사용자 5개의 액터가 존재한다.
 * 모두 하나의 User로 보는게 맞는가? 아니면 개별적으로 구성하는게 맞는가?
 *
 * 아니 시팔... 엔티티 찾아서 정의하는게 머이렇게 시팔 어려워..
 * 진행이 않되자나.. 무기력증이 이런거야... 하 개하기싫어 ..
 * 극복하기 위해.. presentation 쪽 봐보자
 */
public class User {
    private UserID userId;

    private Person person;

    public User(UserID userId) {
        this.userId = userId;
    }

    // 필수 행동 이런 필수행동 들을... User 엔티티 자체에서 수행하는것은
    // 올바르지 못하다고 판단된다. 먼가 다른 방식의 접근이 필요하다
    // 1. 인증
    // 2. 로그인/아웃 and 회원가입/탈퇴
    // 3. 상태변경
}
